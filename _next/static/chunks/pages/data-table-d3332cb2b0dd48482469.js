_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[11],{"2Zhs":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return d}));var r=n("Ff2n"),a=n("rePB"),o=(n("q1tI"),n("7ljp"));function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){Object(a.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var s=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(o.b)("div",l({},t))}},c=s("TableOfContents"),u=s("Guideline"),b={};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",l(l(l({},b),n),{},{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",l({},{id:"data-table"}),"Data table"),Object(o.b)("p",null,"Data tables are containers for displaying information. They allow users to quickly scan, sort, compare, and take action on large amounts of data."),Object(o.b)(c,{mdxType:"TableOfContents"}),Object(o.b)("h2",l({},{id:"anatomy"}),"Anatomy"),Object(o.b)("p",null,"A table contains a header row at the top that has column names, and below there are rows of data. Tables should be used when there are three or more columns of information."),Object(o.b)("h2",l({},{id:"options"}),"Options"),Object(o.b)(u,{title:"Variants",mdxType:"Guideline"},"Data tables come in three different styles - default, borderless and blue. Default is the most commonly used style and fits well in most page layout hierarchies. Borderless is subtle and lightweight, and can be used when there are less rows, or when the information is easy to scan without the help of the divider lines. Blue, which is also commonly known as a zebra style table, is best to use when you need to give your table more visual focus, or when the table contains 10 or more rows, as the zebra-like style makes it easier to scan the data within the table."),Object(o.b)(u,{title:"Row dividers",mdxType:"Guideline"},'Dividers are used for organizing table content and aid the user in parsing related data. in the case og our "blue" variant, we group the whole rows in a zebra-like background color to help the user easily differentiate and scan the different rows of data.'),Object(o.b)("h2",l({},{id:"usage-guidelines"}),"Usage guidelines"),Object(o.b)(u,{title:"Left align textual data",mdxType:"Guideline"},"Similar to a paragraph of text, textual data is always left-aligned within a table. Center alignment should never be used."),Object(o.b)(u,{title:"Right align numerical data",mdxType:"Guideline"},"Numerical data should generally be right-aligned for the ease of scanning and comparing. This should only be left-aligned when numbers are arbitrary identifiers, known as \u201cnominal numbers,\u201d which means they can\u2019t be compared or combined arithmetically (e.g., ZIP codes, IP addresses, phone numbers). Column headers follow the alignment of the data."),Object(o.b)(u,{title:"Respect vertical alignment",mdxType:"Guideline"},"All content should be centered vertically within the row to offer the right visual balance."),Object(o.b)(u,{title:"Use an en dash (\u2013) for missing values",mdxType:"Guideline"},"When there are gaps in the data, use an en dash (\u2013) to represent null or not applicable (N/A) values."))}d.isMDXComponent=!0},"7ljp":function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return f}));var r=n("q1tI"),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),u=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"===typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=u(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),b=u(n),p=r,f=b["".concat(i,".").concat(p)]||b[p]||d[p]||o;return n?a.a.createElement(f,l(l({ref:t},c),{},{components:n})):a.a.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"===typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"===typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},Ff2n:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}n.d(t,"a",(function(){return r}))},Qetd:function(e,t,n){"use strict";var r=Object.assign.bind(Object);e.exports=r,e.exports.default=e.exports},UG88:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/data-table",function(){return n("2Zhs")}])},rePB:function(e,t,n){"use strict";function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,"a",(function(){return r}))}},[["UG88",0,1]]]);